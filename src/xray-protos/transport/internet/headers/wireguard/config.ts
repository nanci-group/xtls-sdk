// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.7
//   protoc               v5.29.3
// source: transport/internet/headers/wireguard/config.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import { messageTypeRegistry } from "../../../../typeRegistry";

export const protobufPackage = "xray.transport.internet.headers.wireguard";

export interface WireguardConfig {
  $type: "xray.transport.internet.headers.wireguard.WireguardConfig";
}

function createBaseWireguardConfig(): WireguardConfig {
  return { $type: "xray.transport.internet.headers.wireguard.WireguardConfig" };
}

export const WireguardConfig: MessageFns<WireguardConfig, "xray.transport.internet.headers.wireguard.WireguardConfig"> =
  {
    $type: "xray.transport.internet.headers.wireguard.WireguardConfig" as const,

    encode(_: WireguardConfig, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
      return writer;
    },

    decode(input: BinaryReader | Uint8Array, length?: number): WireguardConfig {
      const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
      let end = length === undefined ? reader.len : reader.pos + length;
      const message = createBaseWireguardConfig();
      while (reader.pos < end) {
        const tag = reader.uint32();
        switch (tag >>> 3) {
        }
        if ((tag & 7) === 4 || tag === 0) {
          break;
        }
        reader.skip(tag & 7);
      }
      return message;
    },

    fromJSON(_: any): WireguardConfig {
      return { $type: WireguardConfig.$type };
    },

    toJSON(_: WireguardConfig): unknown {
      const obj: any = {};
      return obj;
    },

    create(base?: DeepPartial<WireguardConfig>): WireguardConfig {
      return WireguardConfig.fromPartial(base ?? {});
    },
    fromPartial(_: DeepPartial<WireguardConfig>): WireguardConfig {
      const message = createBaseWireguardConfig();
      return message;
    },
  };

messageTypeRegistry.set(WireguardConfig.$type, WireguardConfig);

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in Exclude<keyof T, "$type">]?: DeepPartial<T[K]> }
  : Partial<T>;

export interface MessageFns<T, V extends string> {
  readonly $type: V;
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
